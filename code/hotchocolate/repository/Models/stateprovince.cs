// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace repository.Models;

/// <summary>
/// State and province lookup table.
/// </summary>
[Table("stateprovince", Schema = "person")]
public partial class stateprovince
{
    /// <summary>
    /// Primary key for StateProvince records.
    /// </summary>
    [Key]
    public int stateprovinceid { get; set; }

    /// <summary>
    /// ISO standard state or province code.
    /// </summary>
    [Required]
    [StringLength(3)]
    public string stateprovincecode { get; set; }

    /// <summary>
    /// ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode.
    /// </summary>
    [Required]
    [StringLength(3)]
    public string countryregioncode { get; set; }

    /// <summary>
    /// 0 = StateProvinceCode exists. 1 = StateProvinceCode unavailable, using CountryRegionCode.
    /// </summary>
    public bool isonlystateprovinceflag { get; set; }

    /// <summary>
    /// State or province description.
    /// </summary>
    [Required]
    [StringLength(50)]
    public string name { get; set; }

    /// <summary>
    /// ID of the territory in which the state or province is located. Foreign key to SalesTerritory.SalesTerritoryID.
    /// </summary>
    public int territoryid { get; set; }

    public Guid rowguid { get; set; }

    [Column(TypeName = "timestamp without time zone")]
    public DateTime modifieddate { get; set; }

    [InverseProperty("stateprovince")]
    public virtual ICollection<address> addresses { get; set; } = new List<address>();

    [ForeignKey("countryregioncode")]
    [InverseProperty("stateprovinces")]
    public virtual countryregion countryregioncodeNavigation { get; set; }

    [InverseProperty("stateprovince")]
    public virtual ICollection<salestaxrate> salestaxrates { get; set; } = new List<salestaxrate>();

    [ForeignKey("territoryid")]
    [InverseProperty("stateprovinces")]
    public virtual salesterritory territory { get; set; }
}