// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace repository.Models;

/// <summary>
/// Product maintenance documents.
/// </summary>
[Table("document", Schema = "production")]
[Index("rowguid", Name = "document_rowguid_key", IsUnique = true)]
public partial class document
{
    /// <summary>
    /// Title of the document.
    /// </summary>
    [Required]
    [StringLength(50)]
    public string title { get; set; }

    /// <summary>
    /// Employee who controls the document.  Foreign key to Employee.BusinessEntityID
    /// </summary>
    public int owner { get; set; }

    /// <summary>
    /// 0 = This is a folder, 1 = This is a document.
    /// </summary>
    public bool folderflag { get; set; }

    /// <summary>
    /// File name of the document
    /// </summary>
    [Required]
    [StringLength(400)]
    public string filename { get; set; }

    /// <summary>
    /// File extension indicating the document type. For example, .doc or .txt.
    /// </summary>
    [StringLength(8)]
    public string fileextension { get; set; }

    /// <summary>
    /// Revision number of the document.
    /// </summary>
    [Required]
    [StringLength(5)]
    public string revision { get; set; }

    /// <summary>
    /// Engineering change approval number.
    /// </summary>
    public int changenumber { get; set; }

    /// <summary>
    /// 1 = Pending approval, 2 = Approved, 3 = Obsolete
    /// </summary>
    public short status { get; set; }

    /// <summary>
    /// Document abstract.
    /// </summary>
    public string documentsummary { get; set; }

    /// <summary>
    /// Complete document.
    /// </summary>
    [Column("document")]
    public byte[] document1 { get; set; }

    /// <summary>
    /// ROWGUIDCOL number uniquely identifying the record. Required for FileStream.
    /// </summary>
    public Guid rowguid { get; set; }

    [Column(TypeName = "timestamp without time zone")]
    public DateTime modifieddate { get; set; }

    /// <summary>
    /// Primary key for Document records.
    /// </summary>
    [Key]
    [Column(TypeName = "character varying")]
    public string documentnode { get; set; }

    [ForeignKey("owner")]
    [InverseProperty("documents")]
    public virtual employee ownerNavigation { get; set; }

    [InverseProperty("documentnodeNavigation")]
    public virtual ICollection<productdocument> productdocuments { get; set; } = new List<productdocument>();
}