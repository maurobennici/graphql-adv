// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace repository.Models;

/// <summary>
/// Employee information such as salary, department, and title.
/// </summary>
[Table("employee", Schema = "humanresources")]
public partial class employee
{
    /// <summary>
    /// Primary key for Employee records.  Foreign key to BusinessEntity.BusinessEntityID.
    /// </summary>
    [Key]
    public int businessentityid { get; set; }

    /// <summary>
    /// Unique national identification number such as a social security number.
    /// </summary>
    [Required]
    [StringLength(15)]
    public string nationalidnumber { get; set; }

    /// <summary>
    /// Network login.
    /// </summary>
    [Required]
    [StringLength(256)]
    public string loginid { get; set; }

    /// <summary>
    /// Work title such as Buyer or Sales Representative.
    /// </summary>
    [Required]
    [StringLength(50)]
    public string jobtitle { get; set; }

    /// <summary>
    /// Date of birth.
    /// </summary>
    public DateOnly birthdate { get; set; }

    /// <summary>
    /// M = Married, S = Single
    /// </summary>
    [MaxLength(1)]
    public string maritalstatus { get; set; }

    /// <summary>
    /// M = Male, F = Female
    /// </summary>
    [MaxLength(1)]
    public string gender { get; set; }

    /// <summary>
    /// Employee hired on this date.
    /// </summary>
    public DateOnly hiredate { get; set; }

    /// <summary>
    /// Job classification. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.
    /// </summary>
    public bool salariedflag { get; set; }

    /// <summary>
    /// Number of available vacation hours.
    /// </summary>
    public short vacationhours { get; set; }

    /// <summary>
    /// Number of available sick leave hours.
    /// </summary>
    public short sickleavehours { get; set; }

    /// <summary>
    /// 0 = Inactive, 1 = Active
    /// </summary>
    public bool currentflag { get; set; }

    public Guid rowguid { get; set; }

    [Column(TypeName = "timestamp without time zone")]
    public DateTime modifieddate { get; set; }

    /// <summary>
    /// Where the employee is located in corporate hierarchy.
    /// </summary>
    [Column(TypeName = "character varying")]
    public string organizationnode { get; set; }

    [ForeignKey("businessentityid")]
    [InverseProperty("employee")]
    public virtual person businessentity { get; set; }

    [InverseProperty("ownerNavigation")]
    public virtual ICollection<document> documents { get; set; } = new List<document>();

    [InverseProperty("businessentity")]
    public virtual ICollection<employeedepartmenthistory> employeedepartmenthistories { get; set; } = new List<employeedepartmenthistory>();

    [InverseProperty("businessentity")]
    public virtual ICollection<employeepayhistory> employeepayhistories { get; set; } = new List<employeepayhistory>();

    [InverseProperty("businessentity")]
    public virtual ICollection<jobcandidate> jobcandidates { get; set; } = new List<jobcandidate>();

    [InverseProperty("employee")]
    public virtual ICollection<purchaseorderheader> purchaseorderheaders { get; set; } = new List<purchaseorderheader>();

    [InverseProperty("businessentity")]
    public virtual salesperson salesperson { get; set; }
}